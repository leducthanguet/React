[{"C:\\Users\\thangld\\Downloads\\React\\Form-UserInput\\src\\index.js":"1","C:\\Users\\thangld\\Downloads\\React\\Form-UserInput\\src\\App.js":"2","C:\\Users\\thangld\\Downloads\\React\\Form-UserInput\\src\\components\\SimpleInput.js":"3","C:\\Users\\thangld\\Downloads\\React\\Form-UserInput\\src\\hooks\\use-input.js":"4","C:\\Users\\thangld\\Downloads\\React\\Form-UserInput\\src\\components\\BasicForm.js":"5","C:\\Users\\thangld\\Downloads\\React\\Form-UserInput\\src\\hooks\\user-input.js":"6","C:\\Users\\thangld\\Downloads\\React\\Form-UserInput\\src\\hooks\\user-input-reducer.js":"7"},{"size":179,"mtime":1648643023000,"results":"8","hashOfConfig":"9"},{"size":214,"mtime":1667808442965,"results":"10","hashOfConfig":"9"},{"size":3889,"mtime":1667807094098,"results":"11","hashOfConfig":"9"},{"size":803,"mtime":1667806277859,"results":"12","hashOfConfig":"9"},{"size":3246,"mtime":1667814467675,"results":"13","hashOfConfig":"9"},{"size":788,"mtime":1667809357202,"results":"14","hashOfConfig":"9"},{"size":1231,"mtime":1667814445261,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u8c7q2",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\thangld\\Downloads\\React\\Form-UserInput\\src\\index.js",[],"C:\\Users\\thangld\\Downloads\\React\\Form-UserInput\\src\\App.js",["32"],"C:\\Users\\thangld\\Downloads\\React\\Form-UserInput\\src\\components\\SimpleInput.js",["33","34","35","36"],"import { useRef, useState, useEffect } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst  ValidateEmail = (mail) => {\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)){\n    return true;\n  }\n    return false;\n}\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  // const [enteredName, setEnteredName] = useState(\"\");\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    isValid: enteredNameIsValid,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== \"\");\n\n\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(ValidateEmail);\n  // const [formIsValid, setFormIsValid] = useState(false);\n\n  // const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  // const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  // const enteredNameIsValid = enteredName !== \"\";\n  // const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  // const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  // const enteredEmailIsValid = ValidateEmail(enteredEmail);\n  // const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  // useEffect(() => {\n  //   if(enteredNameIsValid){\n  //     setFormIsValid(true);\n  //   }\n  //   else{\n  //     setFormIsValid(false);\n  //   }\n  // }, [enteredNameIsValid])\n\n  let formIsValid = false;\n  if(enteredNameIsValid && enteredEmailIsValid){\n    formIsValid=true; \n  }\n  else{\n    formIsValid=false;\n  }\n  // const nameInputChangeHandler = event => {\n  //   setEnteredName(event.target.value);\n  // };\n\n  // const nameInputBlurHandler = (event) => {\n  //   setEnteredNameTouched(true);\n  // }\n\n  // const emailInputChangeHandler = event => {\n  //   setEnteredEmail(event.target.value);\n  // };\n\n  // const emailInputBlurHandler = (event) => {\n  //   setEnteredEmailTouched(true);\n  // }\n\n  const nameInputClasses = nameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputHasError ? \"form-control invalid\" : \"form-control\";\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    console.log(enteredName);\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue)\n    // setEnteredNameTouched(true);\n    // setEnteredEmailTouched(true);\n    if (!enteredNameIsValid || !enteredEmailIsValid){\n      return;\n    }\n    // setEnteredName(\"\");\n    // setEnteredNameTouched(false);\n    resetNameInput();\n    resetEmailInput();\n    // setEnteredEmail(\"\");\n    // setEnteredEmailTouched(false);\n    // nameInputRef.current.value = \"\";\n  };\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && <p className=\"error-text\">Name must be not empty.</p>}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHasError && <p className=\"error-text\">Email must be a valid email.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n",["37","38"],"C:\\Users\\thangld\\Downloads\\React\\Form-UserInput\\src\\hooks\\use-input.js",[],"C:\\Users\\thangld\\Downloads\\React\\Form-UserInput\\src\\components\\BasicForm.js",["39","40","41"],"C:\\Users\\thangld\\Downloads\\React\\Form-UserInput\\src\\hooks\\user-input.js",[],"C:\\Users\\thangld\\Downloads\\React\\Form-UserInput\\src\\hooks\\user-input-reducer.js",[],{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":19},{"ruleId":"42","severity":1,"message":"46","line":1,"column":18,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"42","severity":1,"message":"47","line":1,"column":28,"nodeType":"44","messageId":"45","endLine":1,"endColumn":37},{"ruleId":"48","severity":1,"message":"49","line":5,"column":14,"nodeType":"50","messageId":"51","endLine":5,"endColumn":15,"suggestions":"52"},{"ruleId":"48","severity":1,"message":"49","line":5,"column":30,"nodeType":"50","messageId":"51","endLine":5,"endColumn":31,"suggestions":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"42","severity":1,"message":"58","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":17},{"ruleId":"48","severity":1,"message":"49","line":5,"column":14,"nodeType":"50","messageId":"51","endLine":5,"endColumn":15,"suggestions":"59"},{"ruleId":"48","severity":1,"message":"49","line":5,"column":30,"nodeType":"50","messageId":"51","endLine":5,"endColumn":31,"suggestions":"60"},"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["61","62"],["63","64"],"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"'UserInput' is defined but never used.",["67","68"],["69","70"],{"messageId":"71","fix":"72","desc":"73"},{"messageId":"74","fix":"75","desc":"76"},{"messageId":"71","fix":"77","desc":"73"},{"messageId":"74","fix":"78","desc":"76"},"no-global-assign","no-unsafe-negation",{"messageId":"71","fix":"79","desc":"73"},{"messageId":"74","fix":"80","desc":"76"},{"messageId":"71","fix":"81","desc":"73"},{"messageId":"74","fix":"82","desc":"76"},"removeEscape",{"range":"83","text":"84"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"85","text":"86"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"87","text":"84"},{"range":"88","text":"86"},{"range":"89","text":"84"},{"range":"90","text":"86"},{"range":"91","text":"84"},{"range":"92","text":"86"},[145,146],"",[145,145],"\\",[161,162],[161,161],[154,155],[154,154],[170,171],[170,170]]